{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "0.0.0.34",
 "parameters": {
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "string",
      "metadata": {
        "description": "Location for all resources",
        "step": "GEN"
      }
    },
    "customer_deployment_name": {
      "defaultValue": "mycia",
      "type": "string",
      "metadata": {
        "description": "Deployment name for customer: 'mycia'",
        "step": "GEN"
      }
    },
    "publicIPAddresses_AXRM_SERVER_IP_name": {
      "defaultValue": "AXRM_SERVER-IP",
      "type": "string",
      "metadata": {
        "description": "Public IP Address associated to Server VM",
        "step": "VN"
      }
    },
    "serverPublicIPResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Provides Resource Group where Server VM Public IP is"
      }
    },
    "publicIPAddresses_AXRM_SERVER_IP_domainNameLabel": {
      "type": "string",
      "metadata": {
        "description": "FQDN Label for AgileXRM Server VM",
        "step": "VN"
      }
    },
    "serverPublicIPNewOrExisting": {
      "type": "string",
      "metadata": {
        "description": "Indicates whether Server VM Public IP already exists or needs to be created",
        "step": "VN"
      }
    },
    "publicIPAddresses_AXRM_MODELER_IP_name": {
      "defaultValue": "AXRM_MODELER-IP",
      "type": "string",
      "metadata": {
        "description": "Public IP Address associated to Modeler VM",
        "step": "VN"
      }
    },
    "modelerPublicIPResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Provides Resource Group where Modeler VM Public IP is"
      }
    },
    "modelerPublicIPNewOrExisting": {
      "type": "string",
      "metadata": {
        "description": "Indicates whether Modeler VM Public IP already exists or needs to be created",
        "step": "VN"
      }
    },
    "publicIPAddresses_AXRM_MODELER_IP_domainNameLabel": {
      "type": "string",
      "metadata": {
        "description": "FQDN Label for AgileXRM Modeler VM",
        "step": "VN"
      }
    },
    "virtualNetworksName": {
      "defaultValue": "AgileXRM-VN",
      "type": "string",
      "metadata": {
        "description": "AgileXRM Virtual Network Name",
        "step": "VN"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "metadata": {
        "description": "Boolean indicating whether the VNet is new or existing"
      }
    },
    "virtualNetworksResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group where AgileXRM Virtual Network is deployed"
      }
    },
    "axrm_server_name": {
      "defaultValue": "AXRM-SERVER-VM",
      "type": "string"
    },
    "axrm_modeler_name": {
      "defaultValue": "AXRM-MODELER-VM",
      "type": "string"
    },
    "adminUsername": {
      "defaultValue": "adminaxrm",
      "type": "string"
    },
    "adminPassword": {
      "type": "string"
    },
    "allowAzureIps": {
      "defaultValue": true,
      "type": "bool"
    },
    "sqlConnectionString": {
      "defaultValue": "",
      "type": "string"
    },
    "virtualNetworksSubnetName": {
      "defaultValue": "main",
      "type": "string"
    },
    "virtualNetworksAddressSize": {
      "defaultValue": "10.0.0.0/16",
      "type": "string"
    },
    "virtualNetworksSubnetAddressSize": {
      "defaultValue": "10.0.0.0/24",
      "type": "string"
    },
    "vmSizeServer": {
      "defaultValue": "Standard_B2ms",
      "type": "string"
    },
    "vmSizeModeler": {
      "defaultValue": "Standard_B2ms",
      "type": "string"
    },
    "excludeDBCreation": {
      "defaultValue": false,
      "type": "bool"
    },
    "sqlInstanceName": {
      "defaultValue": "sql-axrmcontoso",
      "type": "string"
    },
    "singleAPDBSize": {
      "defaultValue": 1,
      "type": "int"
    },
    "masterPortalDBSize": {
      "defaultValue": 1,
      "type": "int"
    },
    "singlePortalDBSize": {
      "defaultValue": 1,
      "type": "int"
    },
    "keyVaultId": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "certificateUrl": {
      "type": "string"
    },
    "axrmStorageAccountName": {
      "type": "string"
    },
    "axrmStorageAccountNewOrExisting": {
      "defaultValue": "new",
      "type": "string"
    },
    "axrmStorageAccountType": {
      "defaultValue": "Standard_LRS",
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "deploymentNameVN": "14CEEB61-0450-414F-9F44-96936B6D7991",
    "deploymentNameVM": "14CEEB61-0450-414F-9F44-96936B6D7993",
    "deploymentNameDB": "14CEEB61-0450-414F-9F44-96936B6D7992",
    "nic_server_name": "axrm-server-nic",
    "nic_modeler_name": "axrm-modeler-nic",
    "networkSecurityGroups_frontend_st_nsg_name": "axrmfrontend-nsg",
	"adminPasswordSecretName":"axrmdep-adminpassword",
	"adminPasswordValue":"[concat('AgileXRM@',uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "apiVersion": "2020-06-01",
      "name": "pid-626323e5-6f3f-402b-be09-a835e781ef10-partnercenter",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    }, 

 {	
	"id":"[parameters('keyVaultId')]",
        "type": "Microsoft.KeyVault/vaults",
        "name": "[parameters('keyVaultName')]",
        "apiVersion": "2021-04-01-preview",
        "location": "[parameters('location')]",
        "properties": {
   	     "sku": {
        	"family": "A",
        	"name": "Standard"
        	},
	  "tenantId": "[subscription().tenantId]",
		
    "accessPolicies": [
      {
        "tenantId": "[subscription().tenantId]",
	      "objectId":"721d7029-4640-45c0-aa0f-1347c69c571b",
        "permissions": {
          "keys": [
            "encrypt", "decrypt", "wrapKey", "unwrapKey", "sign", "verify", "get", "list", "create", "update", "import",
            "delete", "backup", "restore", "recover", "purge"
          ],
          "secrets": [
            "get", "list", "set", "delete", "backup", "restore", "recover", "purge"
          ],
          "certificates": [
            "get", "list", "delete", "create", "import", "update",  "managecontacts", "getissuers", "listissuers",
            "setissuers", "deleteissuers", "manageissuers", "recover", "purge"
          ]
        }
      }
    ]		
		
  	}
 },
 {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-04-01-preview",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), variables('adminPasswordSecretName'))]",
      "properties": {
        "value": "[variables('adminPasswordValue')]"
      },
	"dependsOn":["[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"]
    },
    {
      "apiVersion": "2019-03-01",
      "name": "14CEEB61-0450-414F-9F44-96936B6D7991",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'),  concat('nestedtemplates/VN.json', parameters('_artifactsLocationSasToken')) )]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "customer_deployment_name": { "value": "[parameters('customer_deployment_name')]" },
          "networkSecurityGroups_frontend_st_nsg_name": { "value": "[variables('networkSecurityGroups_frontend_st_nsg_name')]" },
          "publicIPAddresses_AXRM_SERVER_IP_name": { "value": "[parameters('publicIPAddresses_AXRM_SERVER_IP_name')]" },
          "serverPublicIPResourceGroup": { "value": "[parameters('serverPublicIPResourceGroup')]" },
          "serverPublicIPNewOrExisting": { "value": "[parameters('serverPublicIPNewOrExisting')]" },
          "publicIPAddresses_AXRM_SERVER_IP_domainNameLabel": { "value": "[parameters('publicIPAddresses_AXRM_SERVER_IP_domainNameLabel')]" },
          "publicIPAddresses_AXRM_MODELER_IP_name": { "value": "[parameters('publicIPAddresses_AXRM_MODELER_IP_name')]" },
          "modelerPublicIPResourceGroup": { "value": "[parameters('modelerPublicIPResourceGroup')]" },
          "modelerPublicIPNewOrExisting": { "value": "[parameters('modelerPublicIPNewOrExisting')]" },
          "publicIPAddresses_AXRM_MODELER_IP_domainNameLabel": { "value": "[parameters('publicIPAddresses_AXRM_MODELER_IP_domainNameLabel')]" },
          "nic_server_name": { "value": "[variables('nic_server_name')]" },
          "nic_modeler_name": { "value": "[variables('nic_modeler_name')]" },
          "virtualNetworksName": { "value": "[parameters('virtualNetworksName')]" },
          "virtualNetworksResourceGroup": { "value": "[parameters('virtualNetworksResourceGroup')]" },
          "virtualNetworkNewOrExisting": { "value": "[parameters('virtualNetworkNewOrExisting')]" },
          "virtualNetworksAddressSize": { "value": "[parameters('virtualNetworksAddressSize')]" },
          "virtualNetworksSubnetName": { "value": "[parameters('virtualNetworksSubnetName')]" },
          "virtualNetworksSubnetAddressSize": { "value": "[parameters('virtualNetworksSubnetAddressSize')]" }
        }
      }
    },
    {
      "apiVersion": "2019-03-01",
      "name": "14CEEB61-0450-414F-9F44-96936B6D7992",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'),  concat('nestedtemplates/DB.json', parameters('_artifactsLocationSasToken')) )]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "excludeDBCreation": { "value": "[parameters('excludeDBCreation')]" },
          "sqlInstanceName": { "value": "[parameters('sqlInstanceName')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "allowAzureIps": { "value": "[parameters('allowAzureIps')]" },
          "singleAPDBSize": { "value": "[parameters('singleAPDBSize')]" },
          "masterPortalDBSize": { "value": "[parameters('masterPortalDBSize')]" },
          "singlePortalDBSize": { "value": "[parameters('singlePortalDBSize')]" },
          "virtualNetworksAXrmId": { "value": "[reference(variables('deploymentNameVN')).outputs.virtualNetworksAXrmId.value]" },
		"administratorLoginPassword":
		{
		"reference": {
			"keyVault": {
			  "id": "[parameters('keyVaultId')]"
			},
			"secretName": "[variables('adminPasswordSecretName')]"
		}
	  }
        }
      }
    },
    {
      "apiVersion": "2019-03-01",
      "name": "14CEEB61-0450-414F-9F44-96936B6D7993",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'),  concat('nestedtemplates/VM.json', parameters('_artifactsLocationSasToken')) )]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "customer_deployment_name": { "value": "[parameters('customer_deployment_name')]" },
          "axrm_server_name": { "value": "[parameters('axrm_server_name')]" },
          "axrm_modeler_name": { "value": "[parameters('axrm_modeler_name')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "nic_server_name": { "value": "[variables('nic_server_name')]" },
          "nic_modeler_name": { "value": "[variables('nic_modeler_name')]" },
          "sqlConnectionString": { "value": "[reference(variables('deploymentNameDB')).outputs.sqlConnectionString.value]" },
          "sqlServerFQDN": { "value": "[reference(variables('deploymentNameDB')).outputs.sqlServerFQDN.value]" },
          "vmSizeServer": { "value": "[parameters('vmSizeServer')]" },
          "vmSizeModeler": { "value": "[parameters('vmSizeModeler')]" },
          "keyVaultId": { "value": "[parameters('keyVaultId')]" },
          "certificateUrl": { "value": "[parameters('certificateUrl')]" },
          "axrmStorageAccountName": { "value": "[parameters('axrmStorageAccountName')]" },
          "axrmStorageAccountNewOrExisting": { "value": "[parameters('axrmStorageAccountNewOrExisting')]" },
          "adminPasswordSecretName": { "value": "[variables('adminPasswordSecretName')]" },
          "_artifactsLocation": { "value": "[parameters('_artifactsLocation')]" },
          "_artifactsLocationSasToken": { "value": "[parameters('_artifactsLocationSasToken')]" }
        }
      },
      "dependsOn": [
        "[variables('deploymentNameDB')]"
      ]
    }
  ],
  "outputs": {
  }
}
